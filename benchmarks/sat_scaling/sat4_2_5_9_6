(define (problem strips-sat-x-1)
(:domain satellite)
(:objects
	satellite0
	instrument0
	instrument1
	satellite1
	instrument2
	instrument3
	satellite2
	instrument4
	satellite3
	instrument5
	image2
	image4
	spectrograph0
	infrared1
	image3
	Star0
	GroundStation4
	Star7
	GroundStation1
	Star3
	GroundStation2
	Star5
	Star8
	Star6
	Phenomenon9
	Planet10
	Phenomenon11
	Phenomenon12
	Star13
	Planet14
)
(:init
	(satellite satellite0)
	(instrument instrument0)
	(supports instrument0 image4)
	(supports instrument0 infrared1)
	(calibration_target instrument0 Star5)
	(calibration_target instrument0 GroundStation2)
	(instrument instrument1)
	(supports instrument1 image3)
	(supports instrument1 infrared1)
	(supports instrument1 image4)
	(calibration_target instrument1 GroundStation1)
	(calibration_target instrument1 Star8)
	(on_board instrument0 satellite0)
	(on_board instrument1 satellite0)
	(power_avail satellite0)
	(pointing satellite0 Star3)
	(satellite satellite1)
	(instrument instrument2)
	(supports instrument2 image3)
	(calibration_target instrument2 Star3)
	(instrument instrument3)
	(supports instrument3 spectrograph0)
	(supports instrument3 image4)
	(calibration_target instrument3 GroundStation2)
	(on_board instrument2 satellite1)
	(on_board instrument3 satellite1)
	(power_avail satellite1)
	(pointing satellite1 Star13)
	(satellite satellite2)
	(instrument instrument4)
	(supports instrument4 infrared1)
	(supports instrument4 image3)
	(calibration_target instrument4 Star5)
	(on_board instrument4 satellite2)
	(power_avail satellite2)
	(pointing satellite2 Planet14)
	(satellite satellite3)
	(instrument instrument5)
	(supports instrument5 image3)
	(calibration_target instrument5 Star6)
	(calibration_target instrument5 Star8)
	(on_board instrument5 satellite3)
	(power_avail satellite3)
	(pointing satellite3 Star6)
	(mode image2)
	(mode image4)
	(mode spectrograph0)
	(mode infrared1)
	(mode image3)
	(direction Star0)
	(direction GroundStation4)
	(direction Star7)
	(direction GroundStation1)
	(direction Star3)
	(direction GroundStation2)
	(direction Star5)
	(direction Star8)
	(direction Star6)
	(direction Phenomenon9)
	(direction Planet10)
	(direction Phenomenon11)
	(direction Phenomenon12)
	(direction Star13)
	(direction Planet14)
)
(:goal (and
	(have_image Phenomenon9 infrared1)
	(have_image Planet10 image4)
	(have_image Phenomenon12 image3)
))

)
